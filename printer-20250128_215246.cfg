###### pin gpio9 used multiple ###### # This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference
# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.
# See docs/Config_Reference.md for a description of parameters.
# Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config
# *** THINGS TO CHANGE/CHECK: ***
# MCU paths                            [mcu] section
# Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
# Z Endstop Switch location            [safe_z_home] section
# Homing end position                  [gcode_macro G32] section
# Z Endstop Switch  offset for Z0      [stepper_z] section
# Probe points                         [quad_gantry_level] section
# Min & Max gantry corner postions     [quad_gantry_level] section
# PID tune                             [extruder] and [heater_bed] sections
# Thermistor types                     [extruder] and [heater_bed] sections
# Probe pin                            [probe] section
# Fine tune E steps                    [extruder] section 
#######################################################################################################################################################################################
#
#####################################################################
#   GCode Arcs for Arcwelder supoprt
#####################################################################
[gcode_arcs]

#####################################################################
#   Input Shaper
#####################################################################
[input_shaper]
#shaper_type_x = mzv
#shaper_freq_x = 63.0
#shaper_type_y = 3hump_ei
#shaper_freq_y = 82.8

#####################################################################
#Sensorless Homing
#####################################################################
[force_move]
enable_force_move: True

#####################################################################
#   Includes
#####################################################################
[include shell_command.cfg]
[include config_backup.cfg]
[include mainsail.cfg]
[include stock_stealthburner_leds.cfg]
#[include stealthburner_led_effects_barf_disco.cfg]
[include nozzle_scrub.cfg]
[include homing.cfg]
#[include fake-toolchanger.cfg]
#[include back_runout_sensor.cfg]
[include th_runout_sensor.cfg]
[include TheFilter.cfg]

#####################################################################
#   MCU 
#####################################################################
[mcu SB2040]
canbus_uuid:562e1af3decb #SV2040_V3

#####################################################################
#      Stealthburner LED
#####################################################################
#may need to migrate to SB Config file
[neopixel sb_leds]
pin: SB2040:gpio26
chain_count: 10   #8 Rainbow barf + 2 Toolhead
color_order: GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRB,GRBW,GRBW
initial_RED: 1.0
initial_GREEN: 0.45
initial_BLUE: 0.0
initial_WHITE: 0.0

#####################################################################
#   Shake n Tune
#####################################################################
[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
 number_of_results_to_keep: 3
timeout: 600

#####################################################################
#   SKEW Correction
#####################################################################
[skew_correction]

#####################################################################
#BTT Neopixel Display
#####################################################################
[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 0
gcode:
        SET_LED LED="btt_mini12864" RED=0 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED="btt_mini12864" RED=0 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED="btt_mini12864" RED=0 GREEN=1 BLUE=1 INDEX=3
        SET_LED LED="btt_mini12864" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
        M117 Welcome

[delayed_gcode startup]
initial_duration: 2
gcode:
    PRINTER_STARTUP_SOUND

#####################################################################
#   Spoolman Macros
#####################################################################
[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#####################################################################
#   Daylight
#####################################################################
[output_pin Daylight]
pin: PB11
pwm: True
cycle_time: 0.01
shutdown_value: 0
value:1.0                             #the brightness at startup (0-1) was .25

[delayed_gcode Daylights] 
initial_duration: 0
gcode:
  SET_PIN PIN=Daylight VALUE=1
   
[gcode_macro Daylights]
gcode:
  {% set S = params.S|default(1)|int %}
  #default_parameter_S=1
  SET_PIN PIN=Daylight VALUE={S}

#####################################################################
#Electronics Bay Lights
#####################################################################
[output_pin Electronics_bay_lights]
pin: PA3
pwm: True
cycle_time: 0.01
shutdown_value: 0
value:1.0                             #the brightness at startup (0-1) was .25

[delayed_gcode Electronics] 
initial_duration: 0
gcode:
  SET_PIN PIN=Electronics VALUE=1
   
[gcode_macro Electronics]
gcode:
  {% set S = params.S|default(1)|int %}
  #default_parameter_S=1
  SET_PIN PIN=Electronics VALUE={S}

#####################################################################
#   Exclude Object
#####################################################################
[exclude_object]

#####################################################################
# FAN
#####################################################################
[fan]
pin:SB2040:gpio24
###------------------------------------------------------------------
[heater_fan my_hotend_fan]
pin: SB2040:gpio19
heater: extruder
heater_temp: 50.0

[fan_generic Toolhead_Fan]
pin: SB2040:gpio21
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.5

#####################################################################
#                            Extruder                               # 
#####################################################################
[extruder]
step_pin:SB2040:gpio14
dir_pin:!SB2040:gpio13
enable_pin: !SB2040:gpio16
rotation_distance: 22.50747446
gear_ratio:50:10
microsteps:16
full_steps_per_rotation: 200
max_extrude_only_distance: 1000.0
max_extrude_only_velocity: 50.0
max_extrude_only_accel: 1500
nozzle_diameter:0.400
filament_diameter:1.75
heater_pin:SB2040:gpio23
min_temp:0
max_temp:300
max_power:1.0
min_extrude_temp:170
pressure_advance = 0.035
pressure_advance_smooth_time: 0.040
#control: pid
#pid_kp: 26.213
#pid_ki:1.304
#pid_kd: 131.721
step_pulse_duration: 0.000004

#####################################################################
#      Extruder thermal sensitivity
#####################################################################
sensor_type:ATC Semitec 104GT-2
sensor_pin: SB2040: gpio27
#####################################################################

[tmc2240 extruder]
uart_pin:SB2040:gpio15
interpolate:False
run_current: 0.65
rref: 12300
stealthchop_threshold: 0
driver_TPFD: 0

#####################################################################
#      Accelerometer
#####################################################################
[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 175, 175, 40  # an example

#[lis2dw]
#cs_pin: SB2040:gpio12
#spi_software_sclk_pin: SB2040:gpio2
#spi_software_mosi_pin: SB2040:gpio3
#spi_software_miso_pin: SB2040:gpio4

#--------------------------------------------------------------------
#[resonance_tester]
#accel_chip: lis2dw
#probe_points: 175, 175, 20
#min_freq: 5
#max_freq: 133
#accel_per_hz: 75
#hz_per_sec: 1

#####################################################################
#   MCU
#####################################################################
[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1B000F000650314D35323820-if00
restart_method: command
##--------------------------------------------------------------------

#####################################################################
#   printer 
#####################################################################
[printer]
kinematics: corexy
max_velocity: 400
max_accel: 8000             #Max 30K no Skipping
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16 #was 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
#--------------------------------------------------------------------
#Changed for Sensorless Homing was 100
homing_speed: 80   #Max 100
#Changed for Sensorless Homing was 5
homing_retract_dist: 0
#--------------------------------------------------------------------
homing_positive_dir: true

#####################################################################
#  Make sure to update below for your relevant driver (2208 or 2209)
#   tmc2209 stepper_x
#####################################################################
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1 #was 0.6 11-24-2024
sense_resistor: 0.110
stealthchop_threshold: 0
#--------------------------------------------------------------------
#added for Sensorless Homing 
diag_pin: ^PG6
#added for Sensorless Homing 
driver_SGTHRS: 105

#--------------------------------------------------------------------
##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
#Changed from dir_pin: !PG1
#added out ! 12-25-2024 1:00am
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16 #was 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#changed for Sensorless Homing was endstop_pin: PG9
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
##--------------------------------------------------------------------
position_endstop: 350
position_max: 350
##--------------------------------------------------------------------
#changed for Sensorless home was homing_speed: 75
homing_speed: 80  #Max 100
##--------------------------------------------------------------------
#changed for Sensorless home was 5
homing_retract_dist: 0
homing_positive_dir: true
##--------------------------------------------------------------------
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
##--------------------------------------------------------------------
#Added for Sensorless homing
diag_pin: ^PG9
##--------------------------------------------------------------------
#Added for Sensorless homing
driver_SGTHRS: 105
#was 75

##--------------------------------------------------------------------
uart_pin: PD11
interpolate: false
run_current: .6
#sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
step_pin: PF11
#changed from dir_pin: !PG3
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16 #was 32
endstop_pin: probe:z_virtual_endstop
##  Uncomment below for 350mm build
position_max: 290

##--------------------------------------------------------------------
#Changed from position_min: -5 to -10
position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: .6 
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: !PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16 #was 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: .6
#sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16 #was 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: .6
#sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16 #was 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: .6
#sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: .7
min_temp: 0
max_temp: 116
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################
[probe]
pin: !SB2040:gpio18
x_offset: 0
y_offset: 0
speed: 5
samples: 3
samples_result: median
sample_retract_dist: 1
samples_tolerance: 0.0085
samples_tolerance_retries: 5
lift_speed: 25

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    


#####################################################################
#   Fan Control
#####################################################################
[controller_fan ebay_controller_fan]
##  Controller fan - FAN2
pin: PD12                                    # J52 "Skirt Fans" FAN2 on board Label
kick_start_time: 0.5
heater: heater_bed

[temperature_fan Octopus]
pin: PE5                                   
max_power: 1.0
shutdown_speed: 0.0
control: pid
off_below: 0.25
sensor_type: temperature_mcu
min_speed: 0
max_speed: 1.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
pid_deriv_time:2.0
min_temp: 0
max_temp: 100
target_temp: 40

[temperature_fan raspberry_Pi]
pin: PA8
max_power: 1.0
shutdown_speed: 0.0
control: pid
off_below: 0.15
sensor_type: temperature_host
min_speed: 0
max_speed: 1.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
pid_deriv_time:2.0
min_temp: 0
max_temp: 100
target_temp: 53 

#[temperature_fan Fly_SB2040_MCU]
#pin: SB2040:gpio21
#max_power: 1.0
#shutdown_speed: 0.0
#control: pid
#off_below:0.15
#sensor_type: temperature_mcu
#sensor_mcu: SB2040
#pid_kp: 1.0
#pid_ki: 0.5
#pid_kd: 2.0
#pid_deriv_time:2.0
#min_temp: 0
#max_temp: 100
#target_temp: 32 

#############################################################################
#	Thermals	
#############################################################################
[temperature_sensor Chamber_Tool_Head]
#sensor_type: Generic 3950
#sensor_pin: SB2040:gpio27
min_temp: 0
Max_temp: 100
sensor_type: MAX31865
sensor_pin: SB2040:gpio17
spi_software_sclk_pin: SB2040:gpio2
spi_software_mosi_pin: SB2040:gpio3
spi_software_miso_pin: SB2040:gpio4
rtd_reference_r: 430  

[temperature_sensor chamber_right_rear_upper]
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 200

[temperature_sensor chamber_front_left_lower]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 200

[temperature_sensor room_temperature]
sensor_type: Generic 3950
sensor_pin: PF6
min_temp: 0
max_temp: 200

[temperature_sensor electronics_bay]
sensor_type: Generic 3950
sensor_pin: PF7
min_temp: 0
max_temp: 200

[temperature_sensor Fly_SB2040]
sensor_type: temperature_mcu
sensor_mcu: SB2040

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
#--------------------------------------------------------------------
##  Gantry Corners for 350mm Build
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed:2000
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.0085
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have

#--------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#--------------------------------------------------------------------

[bed_mesh]
#3-6-2024 from 300 to 800
speed: 800
horizontal_move_z: 20
##--------------------------------------------------------------------
##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
#relative_reference_index: 12


#####################################################################
#   Macros
#####################################################################
# Park front center
[gcode_macro PARKFRONT]
gcode:
    _CG28 ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90 ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z{printer.toolhead.axis_maximum.z/2} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro _HOME_X]
gcode:
    SAVE_GCODE_STATE NAME=HOMING
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.5 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=HOMING

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    SAVE_GCODE_STATE NAME=HOMING
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=HOMING
    
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    #  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PREHEAT]
gcode:
  G90 #set absolute positioning
  G28 #home all axis
  
  ## Move hotend a sufficent distance from heated bed for heat soak
  #--------------------------------------------------------------------
  #G0 X125 Y125 Z50 F3600 ## Uncomment for 250mm build
  #G0 X150 Y150 Z50 F3600 ## Uncomment for 300mm build
  G0 X175 Y175 Z50 F3600 ## Uncomment for 350mm build
  #--------------------------------------------------------------------
  M106 S255 #set parts fan to full speed, helps circulate chamber air
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110 #For ABS

[gcode_macro M601]
gcode:
    PAUSE                ; Pause

[gcode_macro M600]
gcode:
    PAUSE                ; Pause

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
        SET_filament_sensor SENSOR="toolhead_filament_sensor" ENABLE=0                                                                          ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
#chnaged to 5 from 0 to see if it stops nozzle drag
variable_zhop: 5
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_filament_sensor SENSOR="toolhead_filament_sensor" ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                 ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}

# Does not Re-Reun QGL for continuious printing
[gcode_macro _CQGL]
gcode:
  {% if printer.quad_gantry_level.applied|lower == 'false' %}
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28 ; Home if Not already homed
  {% endif %}
  QUAD_GANTRY_LEVEL
  G28 Z
  {% endif %}

[gcode_macro MATERIAL_SETTINGS]
gcode:
    {% set MATERIAL = params.MATERIAL|default("XXX")|string %}

    {% if MATERIAL == "PLA" %}
    #SET_GCODE_OFFSET Z_ADJUST=.245 #PLA
    
    {% elif MATERIAL == "PET" %}
    M220 S50 #set 50% speed for PETG
    {% elif MATERIAL == "ABS" %}
    
    {% else %}
       
    {% endif %}

#####################################################################
#   print_start macro
#####################################################################
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  PRINT_START_SOUND
  SET_FAN_SPEED FAN=Toolhead_Fan SPEED=1
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("55")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  CLEAR_PAUSE
  STATUS_HOMING         # Sets SB-leds to homing-mode
  _CG28
  #G28                   # Full home (XYZ)
  G90                   # Absolut position
  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
   # SET_FAN_SPEED FAN=Nevermore SPEED=.80
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c Chamber_Tool_Head MINIMUM={target_chamber}c"
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber_Tool_Head" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
   # LCD_STATUS_Heating
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Skipped Soak for 5min"                # Displays info
    #Commented out for testing
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c
  CLEAN_NOZZLE
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  _CQGL               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=5
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  STATUS_BUSY
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  SFS_ENABLE
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  CLEAN_NOZZLE
  G1 E45 F350
  CLEAN_NOZZLE
    SKEW_PROFILE LOAD=CaliFlower

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    PRINT_END_SOUND
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 20, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M117 End of Print reached
    # SET_FAN_SPEED FAN=Nevermore SPEED=0.0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25.0 F1800                 ; retract filament
    TURN_OFF_HEATERS
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
        M107                                     ; turn off fan
    SFS_DISABLE
    BED_MESH_CLEAR
    CLEAN_NOZZLE
    SET_SKEW CLEAR=1
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    #PARKFRONT
    STATUS_PART_READY
    SET_FAN_SPEED FAN=Toolhead_Fan SPEED=0
    SET_FAN_SPEED FAN=Bed_Fans SPEED=0
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.105
#*# pid_ki = 1.991
#*# pid_kd = 222.629
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.516
#*# pid_ki = 2.902
#*# pid_kd = 96.780
#*#
#*# [probe]
#*# z_offset = -0.730
